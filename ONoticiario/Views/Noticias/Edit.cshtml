@model ONoticiario.ViewModels.CreateNoticiaViewModel

@{
    ViewBag.Title = "Editar Noticia";
}
<link rel="stylesheet" type="text/css" href="~/Content/personalCss.css">
@if (Request.IsAuthenticated && User.IsInRole("Admin"))
{

    using (Html.BeginForm("Edit", "Noticias", FormMethod.Post, new { enctype = "multipart/form-data", @class = "card p-3",
        @style = "background-color: #15202B;" }))
    {
        @Html.AntiForgeryToken()
        <h2>Editar Noticia</h2>
        <hr style="background-color:darkcyan"/>
        <div class="form-horizontal">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(n => n.Titulo)
                @Html.EditorFor(n => n.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Titulo, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(n => n.Capa)
                <input type="file"
                       class="btn btn-info btn-sm"
                       name="capaUpload"
                       style="color:blue"
                       accept=".jpg, .png"
                       onchange="atulizaImagemEdit(event)" />
            </div>

            <div>
                <button class="btn btn-primary btn-sm" type="button" data-toggle="collapse" data-target="#conteudo"> Preview da Imagem </button>
                <div class="collapse" id="conteudo">
                    <div class="well">
                        <img src="~/imagens/Noticias/@Html.DisplayFor(c=>c.Capa)" class="img-thumbnail" id="imgCapa" />
                    </div>
                </div>

            </div>
            <div class="form-group">
                @Html.LabelFor(n => n.Descricao)
                @Html.EditorFor(n => n.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Descricao, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(n => n.Conteudo)
                @Html.TextAreaFor(n => n.Conteudo, new { htmlAttributes = new { @class = "form-control", @style = "height:300px;width:500px" } })
                @Html.ValidationMessageFor(m => m.Conteudo, "", new { @class = "text-danger" })
            </div>

            <div class="form-group" style="overflow-y:auto">
                <h3>Categorias:</h3>
                <div class="col-md-5">
                    @Html.Partial("ListaCategorias", Model)
                </div>

            </div>
            <div class="form-group">
                @Html.HiddenFor(c => c.Capa)
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Confirmar" class="btn btn-light" />


                </div>


            </div>

        </div>
    }

<div>
    @Html.ActionLink("Voltar atrás", "Index", null, new { @class = "btn btn-sm btn-danger" })
</div>

}
<script>
    //atualiza o preview da imagem
    var atulizaImagemEdit = function (event) {

        // referencia à tag <img />
        var img = document.getElementById('imgCapa');
        // altera o 'src' da <img /> para o da imagem carregada
        img.src = URL.createObjectURL(event.target.files[0]);
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
